name: Build and dist with conditional release

on:
  push:
    branches: [ develop, main ]
    tags:
      - "[0-9]+.[0-9]+.[0-9]+-?*"
  pull_request:
    types: [ opened, edited, reopened ]

jobs:
  pre-release:
    name: "Pre Release"
    runs-on: ubuntu-latest
    permissions:
      contents: write
    
    steps:
      - name: checkout repository
        uses: actions/checkout@v3

      - name: Setup JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'adopt'
      
      - name: Echo github.sha
        id: get_sha
        #run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}
        run: echo ${{ github.sha }}
        
      - name: Echo github.ref
        id: echo_ref
        run: echo ${{ github.ref }}

      - name: Echo github.ref_name
        id: echo_refName
        run: echo ${{ github.ref_name }}
        
      - name: Echo github.ref_type
        id: echo_refType
        run: echo ${{ github.ref_type }}
        
      - name: Set env.version to dev
        if: ${{ github.ref_name == 'develop' }}
        run: echo "version=dev" >> $GITHUB_ENV
  
      - name: Set env.version to tag-value
        if: ${{ github.ref_type == 'tag' }}
        run: echo "version=${{ github.ref_name }}" >> $GITHUB_ENV
    
      - name: Echo env.version
        run: echo ${{ env.version }}

      - name: package management
        uses: borales/actions-yarn@v4.2.0
        with:
          cmd: install # will run `yarn install` command
      
      - name: create dev XAR with ANT
        if: ${{ github.event_name == 'push' && github.ref_name == 'develop' }} 
        run: ant -noinput -buildfile build.xml dist -Dproject.version=${{ github.sha }}
      
      - name: create release XAR with ANT
        if: ${{ github.event_name == 'push' && github.ref_name == 'main' }} 
        run: ant -noinput -buildfile build.xml dist -Dproject.version=${{ env.version }}
#      - name: create release
#        uses: "marvinpinto/action-automatic-releases@v1.2.1"
#        with:
#          repo_token: "${{ secrets.GITHUB_TOKEN }}"
#          automatic_release_tag: "develop"
#          prerelease: true
#          title: "Development Build"
#          files: |
#            dist/FreiDi.topicMapViz-${{ github.sha }}.xar

#      - name: Upload a Build Artifact
#        uses: actions/upload-artifact@v3.1.1
#        with:
#          name: FreiDi.topicMapViz_develop
#          path: dist/FreiDi.topicMapViz-${{ github.sha }}.xar

      - name: Delete dev-release
        if: ${{ github.event_name == 'push' && github.ref_name == 'develop' }}
        uses: dev-drprasad/delete-tag-and-release@v0.2.0
        with:
          delete_release: true
          tag_name: dev
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create dev-release
        if: ${{ github.event_name == 'push' && github.ref_name == 'develop' }}
        uses: ncipollo/release-action@v1.12.0
        with:
          allowUpdates: true
          artifacts: dist/FreiDi.topicMapViz-${{ github.sha }}.xar
          commit: ${{ github.sha }}
          name: "Development Build"
          prerelease: true
          replacesArtifacts: true
          tag: dev
      
      # Whenever a tag is being created a release is being issued
      # could be remodelled to automaticall create the tag, too
      # but then the version would have to be determined programatically and written to package.json
      # github.event_name == 'push' && && github.ref_name == 'main'
      - name: Create release
        if: ${{ github.ref_type == 'tag' }}
        uses: ncipollo/release-action@v1.12.0
        with:
          allowUpdates: false
          artifacts: dist/FreiDi.topicMapViz-${{ env.version }}.xar
          commit: ${{ github.sha }}
          generateReleaseNotes: true
          name: "Release v${{ env.version }}"
          prerelease: false
          replacesArtifacts: true
          tag: "" # ref_name will be used if it is a tag
